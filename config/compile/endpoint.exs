import Config

# Configures the endpoint
config :elixir_configs_example, ElixirConfigsExampleWeb.Endpoint,
  url: [host: "localhost"],
  adapter: Bandit.PhoenixAdapter,
  render_errors: [
    formats: [html: ElixirConfigsExampleWeb.ErrorHTML, json: ElixirConfigsExampleWeb.ErrorJSON],
    layout: false
  ],
  pubsub_server: ElixirConfigsExample.PubSub,
  live_view: [signing_salt: "y5U/MUPh"]

if config_env() == :dev do
  # For development, we disable any cache and enable
  # debugging and code reloading.
  #
  # The watchers configuration can be used to run external
  # watchers to your application. For example, we can use it
  # to bundle .js and .css sources.

  config :elixir_configs_example, ElixirConfigsExampleWeb.Endpoint,
    # Binding to loopback ipv4 address prevents access from other machines.
    # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
    http: [ip: {127, 0, 0, 1}, port: 4000],
    check_origin: false,
    code_reloader: true,
    debug_errors: true,
    watchers: [
      esbuild:
        {Esbuild, :install_and_run, [:elixir_configs_example, ~w(--sourcemap=inline --watch)]},
      tailwind: {Tailwind, :install_and_run, [:elixir_configs_example, ~w(--watch)]}
    ]

  # ## SSL Support
  #
  # In order to use HTTPS in development, a self-signed
  # certificate can be generated by running the following
  # Mix task:
  #
  #     mix phx.gen.cert
  #
  # Run `mix help phx.gen.cert` for more information.
  #
  # The `http:` config above can be replaced with:
  #
  #     https: [
  #       port: 4001,
  #       cipher_suite: :strong,
  #       keyfile: "priv/cert/selfsigned_key.pem",
  #       certfile: "priv/cert/selfsigned.pem"
  #     ],
  #
  # If desired, both `http:` and `https:` keys can be
  # configured to run both http and https servers on
  # different ports.

  # Watch static and templates for browser reloading.
  config :elixir_configs_example, ElixirConfigsExampleWeb.Endpoint,
    live_reload: [
      patterns: [
        ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
        ~r"priv/gettext/.*(po)$",
        ~r"lib/elixir_configs_example_web/(controllers|live|components)/.*(ex|heex)$"
      ]
    ]
end

if config_env() == :test do
  # We don't run a server during test. If one is required,
  # you can enable the server option below.
  config :elixir_configs_example, ElixirConfigsExampleWeb.Endpoint,
    http: [ip: {127, 0, 0, 1}, port: 4002]
end
